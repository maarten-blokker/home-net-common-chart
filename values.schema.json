{
  "$schema": "https://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "replicaCount": {
      "type": "integer",
      "default": 1,
      "minimum": 0,
      "description": "Specifies the number of desired pods"
    },
    "image": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string",
          "description": "Specifies the repository to pull the container image from."
        },
        "pullPolicy": {
          "type": "string",
          "description": "Specifies when to pull the container image.",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ]
        },
        "tag": {
          "type": "string",
          "description": "Specifies the tag of the container image to pull."
        }
      },
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ]
    },
    "imagePullSecrets": {
      "type": "array",
      "description": "A list of secrets used to pull images from private registries.",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Kubernetes secret containing registry credentials."
          }
        },
        "required": ["name"]
      }
    },
    "livenessProbe": {
      "description": "Liveness probe checks if the container is still running. If it fails, Kubernetes will restart the container.",
      "allOf": [
        {
          "$ref": "#/definitions/probe"
        },
        {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false,
              "description": "Enable or disable the probe."
            }
          },
          "required": [
            "enabled"
          ]
        }
      ]
    },
    "readinessProbe": {
      "description": "Readiness probe checks if the container is ready to serve traffic. If it fails, the pod is removed from the service's endpoints.",
      "allOf": [
        {
          "$ref": "#/definitions/probe"
        },
        {
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Enable or disable the probe.",
              "type": "boolean",
              "default": false
            }
          },
          "required": [
            "enabled"
          ]
        }
      ]
    },
    "startupProbe": {
      "description": "Startup probe checks if the container has successfully started. Useful for slow-starting applications.",
      "allOf": [
        {
          "$ref": "#/definitions/probe"
        },
        {
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Enable or disable the probe.",
              "type": "boolean",
              "default": false
            }
          },
          "required": [
            "enabled"
          ]
        }
      ]
    },
    "volumes": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.29.0/_definitions.json#/definitions/io.k8s.api.core.v1.Volume"
          },
          {
            "type": "object",
            "required": ["mount"],
            "properties": {
              "mount": {
                 "$ref": "#/definitions/volumeMounts"
              }
            }
          }
        ]
      },
      "default": []
    },
    "persistentVolumeClaims": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.29.0/_definitions.json#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
          },
          {
            "type": "object",
            "properties": {
              "mount": {
                "$ref": "#/definitions/volumeMounts"
              }
            }
          }
        ]
      },
      "default": []
    },
    "nameOverride": {
      "type": "string"
    },
    "fullnameOverride": {
      "type": "string"
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        },
        "annotations": {
          "type": "object"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "create",
        "annotations",
        "name"
      ]
    },
    "podAnnotations": {
      "type": "object"
    },
    "podSecurityContext": {
      "type": "object"
    },
    "securityContext": {
      "type": "object"
    },
    "ports": {
      "type": "array",
      "description": "List of service ports",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the port"
          },
          "servicePort": {
            "type": "integer",
            "default": 80,
            "description": "Port exposed by the service"
          },
          "containerPort": {
            "type": "integer",
            "description": "Port exposed by the container, if none specified, the service port is used"
          },
          "protocol": {
            "type": "string",
            "description": "Protocol used by the port",
            "default": "TCP"
          }
        },
        "required": ["name", "containerPort"],
        "additionalProperties": false
      }
    },
    "service": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["ClusterIP", "NodePort", "LoadBalancer", "ExternalName"],
          "default": "ClusterIP"
        }
      }
    },
    "envVars": {
      "type": "array",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.29.0/envvar-v1.json",
        "additionalProperties": false
      },
      "description": "User-defined environment variables."
    },
    "envVarsBase": {
      "type": "array",
      "items": {
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.29.0/envvar-v1.json",
        "additionalProperties": false
      },
      "description": "Base set of environment variables provided by the chart."
    },
    "ingress": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "className": {
          "type": "string"
        },
        "annotations": {
          "type": "object"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "paths": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string"
                    },
                    "pathType": {
                      "type": "string",
                      "default": "ImplementationSpecific"
                    }
                  }
                }
              }
            },
            "required": [
              "host"
            ]
          }
        },
        "tls": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "hosts": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "secretName": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "resources": {
      "type": "object"
    },
    "autoscaling": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable or disable autoscaling"
        },
        "minReplicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Minimum number of replicas"
        },
        "maxReplicas": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum number of replicas"
        },
        "targetCPUUtilizationPercentage": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "description": "CPU utilization target percentage for scaling"
        },
        "targetMemoryUtilizationPercentage": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "description": "Memory utilization target percentage for scaling"
        }
      },
      "required": [
        "enabled",
        "minReplicas",
        "maxReplicas"
      ]
    },
    "nodeSelector": {
      "type": "object"
    },
    "tolerations": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "affinity": {
      "type": "object"
    }
  },
  "definitions": {
    "probe": {
      "type": "object",
      "description": "Defines a probe configuration for Kubernetes containers.",
      "properties": {
        "httpGet": {
          "type": "object",
          "description": "HTTP request to perform the probe.",
          "properties": {
            "path": {
              "type": "string",
              "description": "Path to access on the container."
            },
            "port": {
              "type": "string",
              "description": "Port number or name to send the request to."
            },
            "httpHeaders": {
              "type": "array",
              "description": "Custom headers to include in the HTTP request.",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Header name."
                  },
                  "value": {
                    "type": "string",
                    "description": "Header value."
                  }
                },
                "required": [
                  "name",
                  "value"
                ]
              }
            }
          },
          "required": [
            "path",
            "port"
          ]
        },
        "grpc": {
          "type": "object",
          "description": "GRPC probe configuration.",
          "properties": {
            "port": {
              "type": "integer",
              "description": "GRPC service port number."
            }
          }
        },
        "tcpSocket": {
          "type": "object",
          "description": "TCP socket check for the probe.",
          "properties": {
            "port": {
              "type": "string",
              "description": "Port number or name for the TCP check."
            }
          }
        },
        "exec": {
          "type": "object",
          "description": "Executes a command inside the container for the probe.",
          "properties": {
            "command": {
              "type": "array",
              "description": "Command to execute.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "initialDelaySeconds": {
          "type": "integer",
          "description": "Time in seconds to wait before starting the probe after container startup."
        },
        "periodSeconds": {
          "type": "integer",
          "description": "How often (in seconds) to perform the probe."
        },
        "timeoutSeconds": {
          "type": "integer",
          "description": "Time (in seconds) before the probe times out."
        },
        "failureThreshold": {
          "type": "integer",
          "description": "Number of consecutive failures before marking the container as unhealthy."
        },
        "successThreshold": {
          "type": "integer",
          "description": "Number of consecutive successes before marking the container as healthy."
        }
      },
      "required": []
    },
    "volumeMounts":  {
      "type": "object",
      "required": ["mountPath"],
      "properties": {
        "mountPath": {
          "type": "string",
          "description": "Path inside the container to mount the volume"
        },
        "subPath": {
          "type": "string",
          "description": "Optional sub-path within the volume"
        },
        "readOnly": {
          "type": "boolean",
          "description": "Whether to mount the volume as read-only",
          "default": false
        }
      },
      "additionalProperties": false
    }
  },
  "required": [
    "replicaCount",
    "image",
    "livenessProbe",
    "readinessProbe",
    "startupProbe",
    "volumes",
    "persistentVolumeClaims",
    "service",
    "envVars",
    "envVarsBase",
    "autoscaling"
  ]
}
