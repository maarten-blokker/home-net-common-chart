suite: Test suite for deployment resource
templates:
  - templates/deployment.yaml

chart:
  version: 1.2.3
  appVersion: 3.2.1

release:
  name: unit-test

tests:
  - it: creates a deployment
    asserts:
      - isKind:
          of: Deployment

  - it: sets pod annotations
    set:
      podAnnotations:
        home-net/application-name: "Pi-hole"
        home-net/application-type: "DNS"
    asserts:
      - equal:
          path: spec.template.metadata.annotations
          value:
            home-net/application-name: "Pi-hole"
            home-net/application-type: "DNS"

  - it: sets a replica count
    set:
      replicaCount: 5
    asserts:
      - equal:
          path: spec.replicas
          value: 5

  - it: does not allow a negative replica count
    set:
      replicaCount: -1
    asserts:
      - failedTemplate:
          errorPattern: "replicaCount: Must be greater than or equal to 0"

  - it: has no replica count when autoscaling is enabled
    set:
      autoscaling:
        enabled: true
    asserts:
      - notExists:
          path: spec.replicas

  - it: creates a pod with a security context
    set:
      podSecurityContext:
        fsGroup: 1000
    asserts:
      - equal:
          path: spec.template.spec.securityContext
          value:
            fsGroup: 1000

  - it: has correct labels
    asserts:
      - equal:
          path: metadata.labels
          value:
            app.kubernetes.io/instance: unit-test
            app.kubernetes.io/name: common
            app.kubernetes.io/version: 3.2.1
            app.kubernetes.io/managed-by: Helm
            helm.sh/chart: common-1.2.3
      - equal:
          path: spec.selector.matchLabels
          value:
            app.kubernetes.io/instance: unit-test
            app.kubernetes.io/name: common
      - equal:
          path: spec.template.metadata.labels
          value:
            app.kubernetes.io/instance: unit-test
            app.kubernetes.io/name: common

  - it: creates a pod with a container using the specified image
    set:
      image:
        repository: eu.gcr.io
        tag: 1.2.3
        pullPolicy: "Never"
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "common")].image
          value: eu.gcr.io:1.2.3
      - equal:
          path: spec.template.spec.containers[?(@.name == "common")].imagePullPolicy
          value: Never


  - it: includes imagePullSecrets when defined
    set:
      imagePullSecrets:
        - name: "my-secret"
    asserts:
      - equal:
          path: spec.template.spec.imagePullSecrets
          value:
            - name: "my-secret"

  - it: creates a pod with a container using the specified security context
    set:
      securityContext:
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "common")].securityContext
          value:
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL

  - it: fails to render if ports list is empty
    set:
      ports: []
    asserts:
      - isNullOrEmpty:
          path: spec.template.spec.containers[?(@.name == "common")].ports

  - it: renders container port with default protocol
    set:
      ports:
        - name: http
          containerPort: 3000
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "common")].ports
          value:
            - name: http
              containerPort: 3000
              protocol: TCP

  - it: renders multiple ports with mixed protocol and containerPort defined
    set:
      ports:
        - name: web
          containerPort: 8080
        - name: metrics
          containerPort: 9090
          protocol: UDP
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "common")].ports
          value:
            - name: web
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: UDP

  - it: defaults protocol to TCP if not provided
    set:
      ports:
        - name: web
          containerPort: 80
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "common")].ports[?(@.name == "web")].protocol
          value: TCP

  - it: creates a pod with a liveness probe
    set:
      livenessProbe:
        enabled: true
        httpGet:
          path: /health
          port: http
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "common")].livenessProbe
          value:
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
            httpGet:
              path: /health
              port: http

  - it: creates a pod with a readiness probe
    set:
      readinessProbe:
        enabled: true
        exec:
          command: [ "cat", "/tmp/healthy" ]
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "common")].readinessProbe
          value:
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
            exec:
              command: [ "cat", "/tmp/healthy" ]

  - it: creates a pod with a startup probe
    set:
      startupProbe:
        enabled: true
        tcpSocket:
          port: http
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "common")].startupProbe
          value:
            initialDelaySeconds: 10
            periodSeconds: 1
            tcpSocket:
              port: http

  - it: sets a nodeSelector when defined
    set:
      nodeSelector:
        disktype: ssd
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector.disktype
          value: "ssd"

  - it: sets affinity when defined
    set:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: disktype
                    operator: In
                    values:
                      - ssd
    asserts:
      - equal:
          path: spec.template.spec.affinity.nodeAffinity
          value:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: disktype
                      operator: In
                      values:
                        - ssd

  - it: sets tolerations when defined
    set:
      tolerations:
        - key: "example-key"
          operator: "Exists"
          effect: "NoSchedule"
    asserts:
      - equal:
          path: spec.template.spec.tolerations
          value:
            - key: "example-key"
              operator: "Exists"
              effect: "NoSchedule"