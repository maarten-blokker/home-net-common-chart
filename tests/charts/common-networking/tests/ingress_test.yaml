suite: Test ingress template features

tests:
  - it: does not render anything if not explicitly enabled
    documentSelector: &IngressDocument
      path: kind
      value: Ingress
      skipEmptyTemplates: true
    asserts:
      - hasDocuments:
          count: 0
          filterAware: true

  - it: renders an Ingress if it's enabled
    documentSelector: *IngressDocument
    set:
      ingress.enabled: true
    asserts:
      - isKind:
          of: Ingress

  - it: sets annotations if given
    documentSelector: *IngressDocument
    set:
      ingress.enabled: true
      ingress.annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
        ingress.kubernetes.io/rewrite-target: /
    asserts:
      - equal:
          path: metadata.annotations
          value:
            kubernetes.io/ingress.class: nginx
            kubernetes.io/tls-acme: "true"
            ingress.kubernetes.io/rewrite-target: /

  - it: configures TLS by default based on host
    documentSelector: *IngressDocument
    set:
      ingress.enabled: true
      ingress.hosts:
        - host: unit.test.com
    asserts:
      - equal:
          path: spec.tls
          value:
            - hosts:
                - unit.test.com
              secretName: unit.test.com-tls

  - it: configures TLS by default based on host, but only if a single host is specified
    documentSelector: *IngressDocument
    set:
      ingress.enabled: true
      ingress.hosts:
        - host: host1.test.com
        - host: host2.test.com
    asserts:
      - failedTemplate: { }

  - it: configures TLS as is
    documentSelector: *IngressDocument
    set:
      ingress.enabled: true
      ingress.tls:
        - hosts:
            - one.local
            - two.local
          secretName: any.local.tls
    asserts:
      - equal:
          path: spec.tls
          value:
            - hosts:
                - one.local
                - two.local
              secretName: any.local.tls

  - it: disables TLS if an empty array is explicitly set
    documentSelector: *IngressDocument
    set:
      ingress.enabled: true
      ingress.tls: []
    asserts:
      - isNull:
          path: spec.tls

  - it: fails if no http port is available and no paths are given
    documentSelector: *IngressDocument
    set:
      ingress:
        enabled: true
      ports:
        - name: metrics
          containerPort: 90
          servicePort: 9090
    asserts:
      - failedTemplate:
          errorPattern: "no servicePort"

  - it: fails if no http port is available and no paths are given
    documentSelector: *IngressDocument
    set:
      ingress:
        enabled: true
      ports:
        - name: http
          containerPort: 90
    asserts:
      - failedTemplate:
          errorPattern: "no servicePort"
