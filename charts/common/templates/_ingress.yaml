{{- define "common.ingress" -}}
---
{{- $fullName := include "common.fullname" . -}}
{{- $httpPort := "" -}}

{{/* Try to find a service port named "http" in the list of service ports */}}
{{- range .Values.ports }}
  {{- if and (eq .name "http") (hasKey . "servicePort") }}
    {{- $httpPort = .name }}
  {{- end }}
{{- end }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if and (hasKey .Values.ingress "tls") (not (empty .Values.ingress.tls)) }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- else if and (not (hasKey .Values.ingress "tls")) (hasKey .Values.ingress "hosts") (not (empty .Values.ingress.hosts)) }}
    {{- if gt (len .Values.ingress.hosts) 1 }}
      {{- fail "Only one host is allowed in ingress.hosts" }}
    {{- end }}
  tls:
    - hosts:
        - {{ (index .Values.ingress.hosts 0).host | quote }}
      secretName: {{ .Values.ingress.existingSecret | default (printf "%s-tls" (index .Values.ingress.hosts 0).host) }}
  {{- end }}
  rules:
    {{- range (required "An array of hosts is required if ingress is enabled" .Values.ingress.hosts) }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range default (list (dict "path" "/")) .paths }}
          - path: {{ .path }}
            pathType: {{ default ("ImplementationSpecific") .pathType }}
            backend:
              service:
                name: {{ $fullName }}
                port:
                  name: {{ $httpPort | required "Ingress is enabled but no servicePort with name 'http' in .Values.ports is defined." }}
          {{- end }}
    {{- end }}
{{- end }}
